// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v5.29.3
// source: conference/meeting.proto

package conference

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Объекты
type Meeting struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoomId        string                 `protobuf:"bytes,3,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                                                 // ID комнаты
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                 // Название встречи
	AccessPolicy  AccessPolicy           `protobuf:"varint,4,opt,name=access_policy,json=accessPolicy,proto3,enum=conference.AccessPolicy" json:"access_policy,omitempty"` // Политика доступа
	StartAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                                              // Время начала встречи
	EndAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`                                                    // Время окончания встречи
	Status        MeetingStatus          `protobuf:"varint,7,opt,name=status,proto3,enum=conference.MeetingStatus" json:"status,omitempty"`                                // Статус встречи
	Audit         *Audit                 `protobuf:"bytes,8,opt,name=audit,proto3" json:"audit,omitempty"`                                                                 // Время создания и обновления
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Meeting) Reset() {
	*x = Meeting{}
	mi := &file_conference_meeting_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meeting) ProtoMessage() {}

func (x *Meeting) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meeting.ProtoReflect.Descriptor instead.
func (*Meeting) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{0}
}

func (x *Meeting) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Meeting) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *Meeting) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Meeting) GetAccessPolicy() AccessPolicy {
	if x != nil {
		return x.AccessPolicy
	}
	return AccessPolicy_ACCESS_POLICY_UNSPECIFIED
}

func (x *Meeting) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *Meeting) GetEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

func (x *Meeting) GetStatus() MeetingStatus {
	if x != nil {
		return x.Status
	}
	return MeetingStatus_MEETING_STATUS_UNSPECIFIED
}

func (x *Meeting) GetAudit() *Audit {
	if x != nil {
		return x.Audit
	}
	return nil
}

// Запросы и ответы
type ScheduleMeetingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                                                 // ID комнаты
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                 // Название встречи
	AccessPolicy  AccessPolicy           `protobuf:"varint,3,opt,name=access_policy,json=accessPolicy,proto3,enum=conference.AccessPolicy" json:"access_policy,omitempty"` // Политика доступа
	StartAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                                              // Время начала встречи
	EndAt         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`                                                    // Время окончания встречи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduleMeetingRequest) Reset() {
	*x = ScheduleMeetingRequest{}
	mi := &file_conference_meeting_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleMeetingRequest) ProtoMessage() {}

func (x *ScheduleMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleMeetingRequest.ProtoReflect.Descriptor instead.
func (*ScheduleMeetingRequest) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{1}
}

func (x *ScheduleMeetingRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ScheduleMeetingRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ScheduleMeetingRequest) GetAccessPolicy() AccessPolicy {
	if x != nil {
		return x.AccessPolicy
	}
	return AccessPolicy_ACCESS_POLICY_UNSPECIFIED
}

func (x *ScheduleMeetingRequest) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *ScheduleMeetingRequest) GetEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

type GetMeetingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MeetingId     string                 `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"` // ID встречи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMeetingRequest) Reset() {
	*x = GetMeetingRequest{}
	mi := &file_conference_meeting_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMeetingRequest) ProtoMessage() {}

func (x *GetMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMeetingRequest.ProtoReflect.Descriptor instead.
func (*GetMeetingRequest) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{2}
}

func (x *GetMeetingRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

type ListMeetingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                  // ID комнаты
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`           // Количество элементов на странице
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`         // Токен страницы
	From          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`                                    // Время начала диапазона
	To            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`                                        // Время окончания диапазона
	Status        MeetingStatus          `protobuf:"varint,6,opt,name=status,proto3,enum=conference.MeetingStatus" json:"status,omitempty"` // Фильтр по статусу встречи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMeetingsRequest) Reset() {
	*x = ListMeetingsRequest{}
	mi := &file_conference_meeting_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMeetingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeetingsRequest) ProtoMessage() {}

func (x *ListMeetingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeetingsRequest.ProtoReflect.Descriptor instead.
func (*ListMeetingsRequest) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{3}
}

func (x *ListMeetingsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ListMeetingsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMeetingsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListMeetingsRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ListMeetingsRequest) GetTo() *timestamppb.Timestamp {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ListMeetingsRequest) GetStatus() MeetingStatus {
	if x != nil {
		return x.Status
	}
	return MeetingStatus_MEETING_STATUS_UNSPECIFIED
}

type ListMeetingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meetings      []*Meeting             `protobuf:"bytes,1,rep,name=meetings,proto3" json:"meetings,omitempty"`                                  // Список встреч
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Информация о странице
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMeetingsResponse) Reset() {
	*x = ListMeetingsResponse{}
	mi := &file_conference_meeting_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMeetingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeetingsResponse) ProtoMessage() {}

func (x *ListMeetingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeetingsResponse.ProtoReflect.Descriptor instead.
func (*ListMeetingsResponse) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{4}
}

func (x *ListMeetingsResponse) GetMeetings() []*Meeting {
	if x != nil {
		return x.Meetings
	}
	return nil
}

func (x *ListMeetingsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CancelMeetingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MeetingId     string                 `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"` // ID встречи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelMeetingRequest) Reset() {
	*x = CancelMeetingRequest{}
	mi := &file_conference_meeting_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMeetingRequest) ProtoMessage() {}

func (x *CancelMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMeetingRequest.ProtoReflect.Descriptor instead.
func (*CancelMeetingRequest) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{5}
}

func (x *CancelMeetingRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

type UpdateMeetingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MeetingId     string                 `protobuf:"bytes,1,opt,name=meeting_id,json=meetingId,proto3" json:"meeting_id,omitempty"`                                        // ID встречи
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                 // Название встречи
	AccessPolicy  AccessPolicy           `protobuf:"varint,3,opt,name=access_policy,json=accessPolicy,proto3,enum=conference.AccessPolicy" json:"access_policy,omitempty"` // Политика доступа
	StartAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`                                              // Время начала встречи
	EndAt         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`                                                    // Время окончания встречи
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMeetingRequest) Reset() {
	*x = UpdateMeetingRequest{}
	mi := &file_conference_meeting_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMeetingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMeetingRequest) ProtoMessage() {}

func (x *UpdateMeetingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_conference_meeting_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMeetingRequest.ProtoReflect.Descriptor instead.
func (*UpdateMeetingRequest) Descriptor() ([]byte, []int) {
	return file_conference_meeting_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMeetingRequest) GetMeetingId() string {
	if x != nil {
		return x.MeetingId
	}
	return ""
}

func (x *UpdateMeetingRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateMeetingRequest) GetAccessPolicy() AccessPolicy {
	if x != nil {
		return x.AccessPolicy
	}
	return AccessPolicy_ACCESS_POLICY_UNSPECIFIED
}

func (x *UpdateMeetingRequest) GetStartAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartAt
	}
	return nil
}

func (x *UpdateMeetingRequest) GetEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

var File_conference_meeting_proto protoreflect.FileDescriptor

const file_conference_meeting_proto_rawDesc = "" +
	"\n" +
	"\x18conference/meeting.proto\x12\n" +
	"conference\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17conference/common.proto\"\xcd\x02\n" +
	"\aMeeting\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aroom_id\x18\x03 \x01(\tR\x06roomId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12=\n" +
	"\raccess_policy\x18\x04 \x01(\x0e2\x18.conference.AccessPolicyR\faccessPolicy\x125\n" +
	"\bstart_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\astartAt\x121\n" +
	"\x06end_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x05endAt\x121\n" +
	"\x06status\x18\a \x01(\x0e2\x19.conference.MeetingStatusR\x06status\x12'\n" +
	"\x05audit\x18\b \x01(\v2\x11.conference.AuditR\x05audit\"\xf0\x01\n" +
	"\x16ScheduleMeetingRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12=\n" +
	"\raccess_policy\x18\x03 \x01(\x0e2\x18.conference.AccessPolicyR\faccessPolicy\x125\n" +
	"\bstart_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\astartAt\x121\n" +
	"\x06end_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05endAt\"2\n" +
	"\x11GetMeetingRequest\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x01 \x01(\tR\tmeetingId\"\xf9\x01\n" +
	"\x13ListMeetingsRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12.\n" +
	"\x04from\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x04from\x12*\n" +
	"\x02to\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x02to\x121\n" +
	"\x06status\x18\x06 \x01(\x0e2\x19.conference.MeetingStatusR\x06status\"o\n" +
	"\x14ListMeetingsResponse\x12/\n" +
	"\bmeetings\x18\x01 \x03(\v2\x13.conference.MeetingR\bmeetings\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"5\n" +
	"\x14CancelMeetingRequest\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x01 \x01(\tR\tmeetingId\"\xf4\x01\n" +
	"\x14UpdateMeetingRequest\x12\x1d\n" +
	"\n" +
	"meeting_id\x18\x01 \x01(\tR\tmeetingId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12=\n" +
	"\raccess_policy\x18\x03 \x01(\x0e2\x18.conference.AccessPolicyR\faccessPolicy\x125\n" +
	"\bstart_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\astartAt\x121\n" +
	"\x06end_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05endAtBGZEgithub.com/junhekdevsru/omega-zoom-no/api/proto/conference;conferenceb\x06proto3"

var (
	file_conference_meeting_proto_rawDescOnce sync.Once
	file_conference_meeting_proto_rawDescData []byte
)

func file_conference_meeting_proto_rawDescGZIP() []byte {
	file_conference_meeting_proto_rawDescOnce.Do(func() {
		file_conference_meeting_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_conference_meeting_proto_rawDesc), len(file_conference_meeting_proto_rawDesc)))
	})
	return file_conference_meeting_proto_rawDescData
}

var file_conference_meeting_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_conference_meeting_proto_goTypes = []any{
	(*Meeting)(nil),                // 0: conference.Meeting
	(*ScheduleMeetingRequest)(nil), // 1: conference.ScheduleMeetingRequest
	(*GetMeetingRequest)(nil),      // 2: conference.GetMeetingRequest
	(*ListMeetingsRequest)(nil),    // 3: conference.ListMeetingsRequest
	(*ListMeetingsResponse)(nil),   // 4: conference.ListMeetingsResponse
	(*CancelMeetingRequest)(nil),   // 5: conference.CancelMeetingRequest
	(*UpdateMeetingRequest)(nil),   // 6: conference.UpdateMeetingRequest
	(AccessPolicy)(0),              // 7: conference.AccessPolicy
	(*timestamppb.Timestamp)(nil),  // 8: google.protobuf.Timestamp
	(MeetingStatus)(0),             // 9: conference.MeetingStatus
	(*Audit)(nil),                  // 10: conference.Audit
}
var file_conference_meeting_proto_depIdxs = []int32{
	7,  // 0: conference.Meeting.access_policy:type_name -> conference.AccessPolicy
	8,  // 1: conference.Meeting.start_at:type_name -> google.protobuf.Timestamp
	8,  // 2: conference.Meeting.end_at:type_name -> google.protobuf.Timestamp
	9,  // 3: conference.Meeting.status:type_name -> conference.MeetingStatus
	10, // 4: conference.Meeting.audit:type_name -> conference.Audit
	7,  // 5: conference.ScheduleMeetingRequest.access_policy:type_name -> conference.AccessPolicy
	8,  // 6: conference.ScheduleMeetingRequest.start_at:type_name -> google.protobuf.Timestamp
	8,  // 7: conference.ScheduleMeetingRequest.end_at:type_name -> google.protobuf.Timestamp
	8,  // 8: conference.ListMeetingsRequest.from:type_name -> google.protobuf.Timestamp
	8,  // 9: conference.ListMeetingsRequest.to:type_name -> google.protobuf.Timestamp
	9,  // 10: conference.ListMeetingsRequest.status:type_name -> conference.MeetingStatus
	0,  // 11: conference.ListMeetingsResponse.meetings:type_name -> conference.Meeting
	7,  // 12: conference.UpdateMeetingRequest.access_policy:type_name -> conference.AccessPolicy
	8,  // 13: conference.UpdateMeetingRequest.start_at:type_name -> google.protobuf.Timestamp
	8,  // 14: conference.UpdateMeetingRequest.end_at:type_name -> google.protobuf.Timestamp
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_conference_meeting_proto_init() }
func file_conference_meeting_proto_init() {
	if File_conference_meeting_proto != nil {
		return
	}
	file_conference_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_conference_meeting_proto_rawDesc), len(file_conference_meeting_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_conference_meeting_proto_goTypes,
		DependencyIndexes: file_conference_meeting_proto_depIdxs,
		MessageInfos:      file_conference_meeting_proto_msgTypes,
	}.Build()
	File_conference_meeting_proto = out.File
	file_conference_meeting_proto_goTypes = nil
	file_conference_meeting_proto_depIdxs = nil
}
