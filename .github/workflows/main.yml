name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: golangci-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          check-latest: true
          cache: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: >
            --timeout=5m
            --out-format=github-actions

  test:
    name: Build & Test
    runs-on: ubuntu-latest
    needs: [ lint ]

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: agent
          POSTGRES_PASSWORD: agent
          POSTGRES_DB: agentdb
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U agent -d agentdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=12

      redpanda:
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.10
        ports:
          - "9092:9092"
          - "9644:9644"
        options: >-
          --health-cmd="curl -sSf http://localhost:9644/v1/status/ready || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          check-latest: true
          cache: true

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version

      - name: Vendor third_party protos
        run: |
          chmod +x ./easyp
          ./easyp mod vendor

      - name: Generate protos (protoc)
        run: ./easyp generate

      - name: Go mod tidy (safety)
        run: |
          go mod tidy
          git diff --exit-code || (echo "Run 'go mod tidy' locally" && exit 1)

      - name: Install psql client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          for i in {1..60}; do
            if pg_isready -h localhost -p 5432 -d agentdb -U agent; then
              echo "Postgres is ready"; break; fi; sleep 1; done

      - name: Migrate up
        env:
          GRPC_ADDR: ":8080"
          PG_CONN: "postgres://agent:agent@localhost:5432/agentdb?sslmode=disable"
          MIGRATIONS_DIR: "migrations"
        run: go run ./cmd/migrate --direction=up

      - name: Build
        run: go build ./...

      - name: Test (race)
        env:
          GRPC_ADDR: ":8080"
          PG_CONN: "postgres://agent:agent@localhost:5432/agentdb?sslmode=disable"
          MIGRATIONS_DIR: "migrations"
          KAFKA_BROKERS: "localhost:9092"
        run: go test -race -count=1 ./...