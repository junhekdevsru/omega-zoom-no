name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ "*" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: agent
          POSTGRES_PASSWORD: agent
          POSTGRES_DB: agentdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U agent -d agentdb"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=12

      redpanda:
        image: docker.redpanda.com/redpandadata/redpanda:v24.1.10
        ports:
          - 9092:9092
          - 9644:9644
        options: >-
          --health-cmd="curl -sSf http://localhost:9644/v1/status/ready || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=30
        # запуск в dev-режиме
        command: >
          redpanda start --mode dev-container --smp 1
          --overprovisioned --check=false
          --set redpanda.empty_seed_starts_cluster=true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true
          cache: true

      - name: Cache buf modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/buf
            api/proto/_vendor
          key: buf-${{ runner.os }}-${{ hashFiles('buf.yaml') }}
          restore-keys: |
            buf-${{ runner.os }}-

      - name: Install buf
        run: |
          curl -sSL https://github.com/bufbuild/buf/releases/latest/download/buf-Linux-x86_64 -o /usr/local/bin/buf
          chmod +x /usr/local/bin/buf
          buf --version

      - name: Vendor proto deps
        run: |
          chmod +x ./easyp
          ./easyp mod vendor

      - name: Generate protos
        run: |
          ./easyp generate
          git status --porcelain
          # гарантируем, что генерация детерминирована (нет грязных изменений)
          if [ -n "$(git status --porcelain)" ]; then
            echo "Proto generation produced uncommitted changes. Commit generated files." >&2
            git diff
            exit 1
          fi

      - name: Go mod tidy (safety)
        run: go mod tidy && git diff --exit-code || (echo "Run 'go mod tidy' locally" && exit 1)

      - name: Install psql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        env:
          PGHOST: localhost
          PGPORT: 5432
        run: |
          for i in {1..60}; do
            if pg_isready -h localhost -p 5432 -d agentdb -U agent; then
              echo "Postgres is ready"; break; fi; sleep 1; done

      - name: Migrate up
        env:
          GRPC_ADDR: ":8080"
          PG_CONN: "postgres://agent:agent@localhost:5432/agentdb?sslmode=disable"
          MIGRATIONS_DIR: "migrations"
        run: go run ./cmd/migrate --direction=up

      - name: Build
        run: go build ./...

      - name: Test (race)
        env:
          GRPC_ADDR: ":8080"
          PG_CONN: "postgres://agent:agent@localhost:5432/agentdb?sslmode=disable"
          MIGRATIONS_DIR: "migrations"
          # Если тестам понадобится доступ к Redpanda:
          KAFKA_BROKERS: "localhost:9092"
        run: go test -race -count=1 ./...